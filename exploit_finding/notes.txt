Take CS390R

Mutation fuzzer
Take valid input, make some changes, see what happens

Bug bounty: the crash does not need to be exploitable (say it is)
(not a null pointer derefrence ?)
Or, do a writeup, put your name on it

Targeting( what to go after) ***
if looking for bounties, look at that
easy to fuzz are file formats
picked a program ...When picking input for mutation, try to get the most complicated input. exercise the most parts of the program




if doing qurey for web app, make mutations using similar things that the app will useful
focus on one backen 
possibly do Generation
edit query baised 

Anytime a program crashes is a bug.
If there is corrupted data, it is useful. if it is a null pointer derefrence, it is not.


network 

***
Generation

1. creation of input
a. raw Generation
b. Mutation (cheaper, faster, smarter) take input, make random changes
can work between many targets



Mutator:
open a file, walk byte by byte, perform changes, output the file
ex: set quicktime up as loader, mutate input, see if it works

***
Injection

Write the payload to a file, run the program with the payload, and delete files that have not had crash





***
Process monitoring

Post-mortem debugging
using windows - windebug -I

Get more indepth-> write your own small debuggers
register a process as runnign in debug, show exceptions, instructions as it crashes, registers


***
Storage